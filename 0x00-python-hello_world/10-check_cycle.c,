#include "lists.h"

/**
 * check_cycle - checks if a singly linked list has
 * a cycle in it
 * @list: pointer to the list
 * Return: 0 if there is no cycle,
 * 1 if there is a cycle
 */
int check_cycle(listint_t *list)
{
listint_t *slow;
listint_t *fast;
slow = list;
fast = list.next
while (fast != null && fast.next != null)
{
if (slow == fast)
{
return (True);
}
fast = fast.next.next;
slow = slow.next;
}
return (False);
}
